services:
  ########################################
  ############# REVERSE-PROXY ############
  ########################################
  traefik:
    image: ${TRAEFIK}
    container_name: traefik
    command: --api.insecure=true --providers.docker=true #Enables the web UI and tells TrÃ¦fik to listen to docker
    ports:
      - "80:80" #The HTTP port
      - "8082:8080" #The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock #so Traefik can listen to the Docker events
      - ../../init-data/traefik/traefik-conf.yml:/etc/traefik/traefik.yml
      - ../../init-data/traefik/traefik-services.yml:/etc/traefik/services.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  ########################################
  ############### DATABASE ###############
  ########################################
  postgresdb:
    image: ${POSTGRES}
    container_name: postgresdb
    command: [-cmax_prepared_transactions=100]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres:/var/lib/postgresql/data
      - ../../init-data/db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      traefik:
        condition: service_started
    labels:
      - "traefik.http.services.postgresdb.loadbalancer.server.port=5432"
      - "traefik.http.routers.postgresdb.rule=Host(`postgresdb`)"
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  pgadmin:
    image: ${PGADMIN}
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: user@example.com
      PGADMIN_DEFAULT_PASSWORD: mysecretpassword
    volumes:
      - ../../init-data/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin`)"
    networks:
      - onecx
    profiles:
      - all

  #############################################
  ################ Security ###################
  #############################################
  keycloak-app:
    image: ${KEYCLOAK}
    command: "start-dev --import-realm"
    container_name: keycloak-app
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_POOL_INITIAL_SIZE: 1
      KC_DB_POOL_MAX_SIZE: 5
      KC_DB_POOL_MIN_SIZE: 2
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: postgresdb
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: keycloak-app
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: true
    volumes:
      - ../../init-data/keycloak/imports:/opt/keycloak/data/import
    healthcheck:
      test: "{ printf >&3 'GET /realms/onecx/.well-known/openid-configuration HTTP/1.0\r\nHost: localhost\r\n\r\n'; cat <&3; } 3<>/dev/tcp/localhost/8080 | head -1 | grep 200"
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      postgresdb:
        condition: service_healthy
    labels:
      - "traefik.http.services.keycloak-intranet.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak-intranet.rule=Host(`keycloak-app`)"
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  #############################################
  ################ Products ###################
  #############################################

  ########## ONECX-ANNOUNCEMENT
  onecx-announcement-svc:
    image: ${ONECX_ANNOUNCEMENT_SVC}
    container_name: onecx-announcement-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_announcement
      QUARKUS_DATASOURCE_PASSWORD: onecx_announcement
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgresdb:5432/onecx_announcement?sslmode=disable
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgresdb:
        condition: service_healthy
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-announcement-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-announcement-svc.rule=Host(`onecx-announcement-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all

  onecx-announcement-bff:
    image: ${ONECX_ANNOUNCEMENT_BFF}
    container_name: onecx-announcement-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-announcement"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-announcement-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-announcement-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-announcement-bff.rule=Host(`onecx-announcement-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all

  onecx-announcement-ui:
    image: ${ONECX_ANNOUNCEMENT_UI}
    container_name: onecx-announcement-ui
    environment:
      APP_BASE_HREF: /mfe/announcement/
      APP_ID: onecx-announcement-ui
      PRODUCT_NAME: "onecx-announcement"
    depends_on:
      onecx-announcement-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-announcement-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-announcement-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/announcement/`)"
    networks:
      - onecx
    profiles:
      - all

  ########## ONECX-HELP
  onecx-help-svc:
    image: ${ONECX_HELP_SVC}
    container_name: onecx-help-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_help
      QUARKUS_DATASOURCE_PASSWORD: onecx_help
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgresdb:5432/onecx_help?sslmode=disable
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgresdb:
        condition: service_healthy
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-help-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-help-svc.rule=Host(`onecx-help-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all

  onecx-help-bff:
    image: ${ONECX_HELP_BFF}
    container_name: onecx-help-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-help"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-help-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-help-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-help-bff.rule=Host(`onecx-help-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all

  onecx-help-ui:
    image: ${ONECX_HELP_UI}
    container_name: onecx-help-ui
    environment:
      APP_BASE_HREF: /mfe/help/
      APP_ID: onecx-help-ui
      PRODUCT_NAME: "onecx-help"
    depends_on:
      onecx-help-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-help-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-help-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/help/`)"
    networks:
      - onecx
    profiles:
      - all

  ########## ONECX-IAM
  onecx-iam-svc:
    image: ${ONECX_IAM_SVC}
    container_name: onecx-iam-svc
    environment:
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_SERVER_URL: http://keycloak-app:8080
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_REALM: master
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_USERNAME: admin
      QUARKUS_KEYCLOAK_ADMIN_CLIENT_PASSWORD: admin
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-iam-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-iam-svc.rule=Host(`onecx-iam-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all

  onecx-iam-bff:
    image: ${ONECX_IAM_BFF}
    container_name: onecx-iam-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-iam"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-iam-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-iam-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-iam-bff.rule=Host(`onecx-iam-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all

  onecx-iam-ui:
    image: ${ONECX_IAM_UI}
    container_name: onecx-iam-ui
    environment:
      APP_BASE_HREF: "/mfe/iam/"
      APP_ID: "onecx-iam-ui"
      PRODUCT_NAME: "onecx-iam"
    depends_on:
      onecx-iam-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-iam-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-iam-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/iam/`)"
    networks:
      - onecx
    profiles:
      - all

  ########## ONECX PARAMETER
  onecx-parameter-svc:
    image: ${ONECX_PARAMETER_SVC}
    container_name: onecx-parameter-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_parameter
      QUARKUS_DATASOURCE_PASSWORD: onecx_parameter
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_parameter?sslmode=disable"
      TKIT_RS_CONTEXT_TENANT_ID_ENABLED: "false"
      QUARKUS_REST_CLIENT_ONECX_TENANT_URL: "http://onecx-tenant-svc:8080"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-parameter-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-parameter-svc.rule=Host(`onecx-parameter-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - data-import

  onecx-parameter-bff:
    image: ${ONECX_PARAMETER_BFF}
    container_name: onecx-parameter-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-parameter"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-parameter-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-parameter-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-parameter-bff.rule=Host(`onecx-parameter-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all

  onecx-parameter-ui:
    image: ${ONECX_PARAMETER_UI}
    container_name: onecx-parameter-ui
    environment:
      APP_BASE_HREF: "/mfe/parameter/"
      APP_ID: "onecx-parameter-ui"
      PRODUCT_NAME: "onecx-parameter"
    depends_on:
      onecx-parameter-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-parameter-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-parameter-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/parameter/`)"
    networks:
      - onecx
    profiles:
      - all

  ########## ONECX-PERMISSION
  onecx-permission-svc:
    image: ${ONECX_PERMISSION_SVC}
    container_name: onecx-permission-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_permission
      QUARKUS_DATASOURCE_PASSWORD: onecx_permission
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_permission?sslmode=disable"
      QUARKUS_REST_CLIENT_ONECX_TENANT_URL: "http://onecx-tenant-svc:8080"
      ONECX_PERMISSION_TOKEN_VERIFIED: false
      TKIT_RS_CONTEXT_TENANT_ID_ENABLED: "false"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-permission-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-permission-svc.rule=Host(`onecx-permission-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  onecx-permission-bff:
    image: ${ONECX_PERMISSION_BFF}
    container_name: onecx-permission-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-permission"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-permission-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-permission-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-permission-bff.rule=Host(`onecx-permission-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-permission-ui:
    image: ${ONECX_PERMISSION_UI}
    container_name: onecx-permission-ui
    environment:
      APP_BASE_HREF: "/mfe/permission/"
      APP_ID: "onecx-permission-ui"
      PRODUCT_NAME: "onecx-permission"
    depends_on:
      onecx-permission-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-permission-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-permission-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/permission/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX-PRODUCT-STORE
  onecx-product-store-svc:
    image: ${ONECX_PRODUCT_STORE_SVC}
    container_name: onecx-product-store-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_product_store
      QUARKUS_DATASOURCE_PASSWORD: onecx_product_store
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_product_store?sslmode=disable"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-product-store-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-product-store-svc.rule=Host(`onecx-product-store-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  onecx-product-store-bff:
    image: ${ONECX_PRODUCT_STORE_BFF}
    container_name: onecx-product-store-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-product-store"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-product-store-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-product-store-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-product-store-bff.rule=Host(`onecx-product-store-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-product-store-ui:
    image: ${ONECX_PRODUCT_STORE_UI}
    container_name: onecx-product-store-ui
    environment:
      APP_BASE_HREF: "/mfe/product-store/"
      APP_ID: "onecx-product-store-ui"
      PRODUCT_NAME: "onecx-product-store"
    depends_on:
      onecx-product-store-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-product-store-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-product-store-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/product-store/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX-SHELL
  onecx-shell-bff:
    image: ${ONECX_SHELL_BFF}
    container_name: onecx-shell-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-shell"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      keycloak-app:
        condition: service_healthy
      onecx-tenant-svc:
        condition: service_started
      onecx-theme-svc:
        condition: service_started
      onecx-permission-svc:
        condition: service_started
      onecx-product-store-svc:
        condition: service_started
      onecx-user-profile-svc:
        condition: service_started
      onecx-workspace-svc:
        condition: service_started
    labels:
      - "traefik.http.services.onecx-shell-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-shell-bff.rule=Host(`onecx-shell-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal

  onecx-shell-ui:
    image: ${ONECX_SHELL_UI}
    container_name: onecx-shell-ui
    environment:
      ONECX_PERMISSIONS_ENABLED: true
      ONECX_PERMISSIONS_CACHE_ENABLED: false
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-shell"
      APP_BASE_HREF: "/onecx-shell/"
      KEYCLOAK_URL: http://keycloak-app
      ONECX_VAR_REMAP: "KEYCLOAK_REALM=KC_REALM;KEYCLOAK_CLIENT_ID=CLIENT_USER_ID"
      CLIENT_USER_ID: "onecx-shell-ui-client"
    depends_on:
      onecx-shell-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-shell-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-shell-ui.rule=Host(`local-proxy`)&&PathPrefix(`/onecx-shell/`)"
    env_file:
      - common.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal

  ########## ONECX-TENANT
  onecx-tenant-svc:
    image: ${ONECX_TENANT_SVC}
    container_name: onecx-tenant-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_tenant
      QUARKUS_DATASOURCE_PASSWORD: onecx_tenant
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_tenant?sslmode=disable"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-tenant-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-tenant-svc.rule=Host(`onecx-tenant-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  onecx-tenant-bff:
    image: ${ONECX_TENANT_BFF}
    container_name: onecx-tenant-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-tenant"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-tenant-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-tenant-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-tenant-bff.rule=Host(`onecx-tenant-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-tenant-ui:
    image: ${ONECX_TENANT_UI}
    container_name: onecx-tenant-ui
    environment:
      APP_BASE_HREF: "/mfe/tenant/"
      APP_ID: "onecx-tenant-ui"
      PRODUCT_NAME: "onecx-tenant"
    depends_on:
      onecx-tenant-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-tenant-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-tenant-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/tenant/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX THEME
  onecx-theme-svc:
    image: ${ONECX_THEME_SVC}
    container_name: onecx-theme-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_theme
      QUARKUS_DATASOURCE_PASSWORD: onecx_theme
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_theme?sslmode=disable"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-theme-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-theme-svc.rule=Host(`onecx-theme-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  onecx-theme-bff:
    image: ${ONECX_THEME_BFF}
    container_name: onecx-theme-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-theme"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-theme-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-theme-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-theme-bff.rule=Host(`onecx-theme-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-theme-ui:
    image: ${ONECX_THEME_UI}
    container_name: onecx-theme-ui
    environment:
      APP_BASE_HREF: "/mfe/theme/"
      APP_ID: "onecx-theme-ui"
      PRODUCT_NAME: "onecx-theme"
    depends_on:
      onecx-theme-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-theme-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-theme-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/theme/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX-USER-PROFILE
  onecx-user-profile-svc:
    image: ${ONECX_USER_PROFILE_SVC}
    container_name: onecx-user-profile-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_user_profile
      QUARKUS_DATASOURCE_PASSWORD: onecx_user_profile
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_user_profile?sslmode=disable"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-user-profile-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-user-profile-svc.rule=Host(`onecx-user-profile-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal

  onecx-user-profile-bff:
    image: ${ONECX_USER_PROFILE_BFF}
    container_name: onecx-user-profile-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-user-profile"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-user-profile-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-user-profile-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-user-profile-bff.rule=Host(`onecx-user-profile-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-user-profile-ui:
    image: ${ONECX_USER_PROFILE_UI}
    container_name: onecx-user-profile-ui
    environment:
      APP_BASE_HREF: "/mfe/user-profile/"
      APP_ID: "onecx-user-profile-ui"
      PRODUCT_NAME: "onecx-user-profile"
    depends_on:
      onecx-user-profile-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-user-profile-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-user-profile-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/user-profile/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX-WELCOME
  onecx-welcome-svc:
    image: ${ONECX_WELCOME_SVC}
    container_name: onecx-welcome-svc
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_welcome
      QUARKUS_DATASOURCE_PASSWORD: onecx_welcome
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_welcome?sslmode=disable"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-welcome-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-welcome-svc.rule=Host(`onecx-welcome-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-welcome-bff:
    image: ${ONECX_WELCOME_BFF}
    container_name: onecx-welcome-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-welcome"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-welcome-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-welcome-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-welcome-bff.rule=Host(`onecx-welcome-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-welcome-ui:
    image: ${ONECX_WELCOME_UI}
    container_name: onecx-welcome-ui
    environment:
      APP_BASE_HREF: "/mfe/welcome/"
      APP_ID: "onecx-welcome-ui"
      PRODUCT_NAME: "onecx-welcome"
    depends_on:
      onecx-welcome-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-welcome-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-welcome-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/welcome/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

  ########## ONECX WORKSPACE
  onecx-workspace-svc:
    image: ${ONECX_WORKSPACE_SVC}
    container_name: onecx-workspace-svc
    user: root
    environment:
      QUARKUS_DATASOURCE_USERNAME: onecx_workspace
      QUARKUS_DATASOURCE_PASSWORD: onecx_workspace
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgresdb:5432/onecx_workspace?sslmode=disable"
      TKIT_RS_CONTEXT_TENANT_ID_ENABLED: "false"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      keycloak-app:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-workspace-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-workspace-svc.rule=Host(`onecx-workspace-svc`)"
    env_file:
      - common.env
      - svc.env
    networks:
      - onecx
    profiles:
      - all
      - base
      - minimal
      - data-import

  onecx-workspace-bff:
    image: ${ONECX_WORKSPACE_BFF}
    container_name: onecx-workspace-bff
    environment:
      ONECX_PERMISSIONS_PRODUCT_NAME: "onecx-workspace"
    healthcheck:
      test: curl --head -fsS http://localhost:8080/q/health
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      onecx-workspace-svc:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-workspace-bff.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-workspace-bff.rule=Host(`onecx-workspace-bff`)"
    env_file:
      - common.env
      - bff.env
    networks:
      - onecx
    profiles:
      - all
      - base

  onecx-workspace-ui:
    image: ${ONECX_WORKSPACE_UI}
    container_name: onecx-workspace-ui
    environment:
      APP_BASE_HREF: "/mfe/workspace/"
      APP_ID: "onecx-workspace-ui"
      PRODUCT_NAME: "onecx-workspace"
    depends_on:
      onecx-workspace-bff:
        condition: service_healthy
    labels:
      - "traefik.http.services.onecx-workspace-ui.loadbalancer.server.port=8080"
      - "traefik.http.routers.onecx-workspace-ui.rule=Host(`local-proxy`)&&PathPrefix(`/mfe/workspace/`)"
    networks:
      - onecx
    profiles:
      - all
      - base

volumes:
  postgres:

networks:
  onecx:
